{
    "openapi": "3.1.0",
    "info": {
        "title": "СервисПро",
        "version": "0.0.1 (v1)",
        "description": "Автодокументация"
    },
    "paths": {
        "/api/v1/account/actions/activation/": {
            "post": {
                "operationId": "account_actions_activation_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserActivation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/registration/": {
            "post": {
                "operationId": "account_actions_registration_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountRegistration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/resend-activation/": {
            "post": {
                "operationId": "account_actions_resend_activation_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResendActivation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResendActivation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResendActivation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResendActivation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/reset-password/": {
            "post": {
                "operationId": "account_actions_reset_password_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResetPassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/reset-password-confirm/": {
            "post": {
                "operationId": "account_actions_reset_password_confirm_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPasswordConfirm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPasswordConfirm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPasswordConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResetPasswordConfirm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/device/": {
            "get": {
                "operationId": "account_device_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeviceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "account_device_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/device/{token}/": {
            "delete": {
                "operationId": "account_device_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "token",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/account/jwt/blacklist/": {
            "post": {
                "operationId": "account_jwt_blacklist_create",
                "description": "Takes a token and blacklists it. Must be used with the\n`rest_framework_simplejwt.token_blacklist` app installed.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenBlacklist"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenBlacklist"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenBlacklist"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenBlacklist"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/blacklist-cookie/": {
            "post": {
                "operationId": "account_jwt_blacklist_cookie_create",
                "description": "Takes a token and blacklists it. Must be used with the\n`rest_framework_simplejwt.token_blacklist` app installed.",
                "tags": [
                    "account"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/account/jwt/create/": {
            "post": {
                "operationId": "account_jwt_create_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/create-cookie/": {
            "post": {
                "operationId": "account_jwt_create_cookie_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPairSerializerV2"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/refresh/": {
            "post": {
                "operationId": "account_jwt_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/refresh-cookie/": {
            "post": {
                "operationId": "account_jwt_refresh_cookie_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CookieTokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CookieTokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CookieTokenRefresh"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CookieTokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/verify/": {
            "post": {
                "operationId": "account_jwt_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenVerify"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/": {
            "get": {
                "operationId": "account_me_retrieve",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPersonal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "account_me_partial_update",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPersonal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPersonal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPersonal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPersonal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/account-registration-retry/": {
            "post": {
                "operationId": "account_me_account_registration_retry_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistrationRetry"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistrationRetry"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistrationRetry"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountRegistrationRetry"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/delete-account/": {
            "post": {
                "operationId": "account_me_delete_account_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDeleteAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/delete-account-confirm/": {
            "post": {
                "operationId": "account_me_delete_account_confirm_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/my/": {
            "get": {
                "operationId": "org_my_retrieve",
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyUserAll"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/my-employments/": {
            "get": {
                "operationId": "org_my_employments_retrieve",
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyUserEmployment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/my-invites/": {
            "get": {
                "operationId": "org_my_invites_retrieve",
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyUserInvite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/notification/": {
            "get": {
                "operationId": "org_notification_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNotificationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/notification/{id}/": {
            "get": {
                "operationId": "org_notification_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notification.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/": {
            "get": {
                "operationId": "org_orgs_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs-invites/": {
            "get": {
                "operationId": "org_orgs_invites_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationInviteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_invites_create",
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInviteDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInviteDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInviteDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs-invites/{id}/": {
            "get": {
                "operationId": "org_orgs_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization invite.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization invite.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs-invites/inn/": {
            "post": {
                "operationId": "org_orgs_invites_inn_create",
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInn"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInn"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInn"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/contact/": {
            "patch": {
                "operationId": "org_orgs_contact_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/employees/": {
            "get": {
                "operationId": "org_orgs_employees_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_owner",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "client",
                                "coordinator",
                                "engineer",
                                "server"
                            ]
                        },
                        "description": "* `server` - server\n* `client` - client\n* `engineer` - engineer\n* `coordinator` - coordinator"
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEmployeeDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_employees_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/employees/{id}/": {
            "get": {
                "operationId": "org_orgs_employees_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_employees_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmployeeDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmployeeDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmployeeDetailed"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_employees_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/my-profile/": {
            "get": {
                "operationId": "org_orgs_my_profile_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_my_profile_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/points/": {
            "get": {
                "operationId": "org_orgs_points_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_permanent",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedControlPointList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_points_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlPoint"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlPoint"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlPoint"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlPoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/points/{id}/": {
            "get": {
                "operationId": "org_orgs_points_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this control point.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlPoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_points_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this control point.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedControlPoint"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedControlPoint"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedControlPoint"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlPoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_points_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this control point.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/related-sers/": {
            "get": {
                "operationId": "org_orgs_related_sers_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationPublicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/related-sers/{related_id}/": {
            "get": {
                "operationId": "org_orgs_related_sers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationPublic"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/related-sers/{related_id}/employees/": {
            "get": {
                "operationId": "org_orgs_related_sers_employees_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_owner",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "client",
                                "coordinator",
                                "engineer",
                                "server"
                            ]
                        },
                        "description": "* `server` - server\n* `client` - client\n* `engineer` - engineer\n* `coordinator` - coordinator"
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEmployeeDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/related-sers/{related_id}/employees/{id}/": {
            "get": {
                "operationId": "org_orgs_related_sers_employees_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/requisites/": {
            "patch": {
                "operationId": "org_orgs_requisites_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationRequisites"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationRequisites"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationRequisites"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationRequisites"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/service-center/": {
            "patch": {
                "operationId": "org_orgs_service_center_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServiceCenter"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServiceCenter"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedServiceCenter"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ServiceCenter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/settings/": {
            "patch": {
                "operationId": "org_orgs_settings_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationSettings"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationSettings"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationSettings"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationSettings"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/user-invites/": {
            "get": {
                "operationId": "org_orgs_user_invites_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserInviteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_user_invites_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/user-invites/{id}/": {
            "get": {
                "operationId": "org_orgs_user_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user invite.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_user_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user invite.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/user-invites/{id}/accept/": {
            "post": {
                "operationId": "org_orgs_user_invites_accept_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user invite.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAcceptInvite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAcceptInvite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAcceptInvite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAcceptInvite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{id}/": {
            "get": {
                "operationId": "org_orgs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrganizationDetailed"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/sers/{org_id}/related-orgs/": {
            "get": {
                "operationId": "org_sers_related_orgs_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationPublicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/sers/{org_id}/related-orgs/{related_id}/": {
            "get": {
                "operationId": "org_sers_related_orgs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationPublic"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/sers/{org_id}/related-orgs/{related_id}/employees/": {
            "get": {
                "operationId": "org_sers_related_orgs_employees_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_owner",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "client",
                                "coordinator",
                                "engineer",
                                "server"
                            ]
                        },
                        "description": "* `server` - server\n* `client` - client\n* `engineer` - engineer\n* `coordinator` - coordinator"
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEmployeeDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/sers/{org_id}/related-orgs/{related_id}/employees/{id}/": {
            "get": {
                "operationId": "org_sers_related_orgs_employees_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/brands/": {
            "get": {
                "operationId": "vehicle_orgs_brands_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "equipment",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "equipment_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleBrandList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_orgs_brands_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleBrand"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleBrand"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleBrand"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleBrand"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/brands/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_brands_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle brand.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleBrand"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_orgs_brands_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle brand.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleBrand"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleBrand"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleBrand"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleBrand"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_orgs_brands_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle brand.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/catalog-cache/{format_version}/": {
            "get": {
                "operationId": "vehicle_orgs_catalog_cache_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "format_version",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationCacheFile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/equipment/": {
            "get": {
                "operationId": "vehicle_orgs_equipment_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "brand",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "brand_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleEquipmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/models/": {
            "get": {
                "operationId": "vehicle_orgs_models_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "brand",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleModelDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_orgs_models_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModel"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModel"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleModel"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModel"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/models/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_models_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle model.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModelDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_orgs_models_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle model.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleModelDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleModelDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleModelDetailed"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleModelDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_orgs_models_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle model.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "gos_number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-order",
                                    "-updated_at",
                                    "created_at",
                                    "order",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `order` - Order\n* `-order` - Order (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sn",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_orgs_vehicles_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_orgs_vehicles_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_orgs_vehicles_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/docs/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_docs_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleDocumentationDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_orgs_vehicles_docs_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/docs/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_docs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle documentation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_orgs_vehicles_docs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle documentation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/photos/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_photos_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehiclePhotoDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_orgs_vehicles_photos_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePhotoDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePhotoDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePhotoDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePhotoDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/photos/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_photos_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle photo.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePhotoDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_orgs_vehicles_photos_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle photo.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehiclePhotoUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehiclePhotoUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehiclePhotoUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePhotoUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_orgs_vehicles_photos_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle photo.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/recs/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_recs_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "critical",
                                    "info",
                                    "warning"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `info` - info\n* `warning` - warning\n* `critical` - critical",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "solution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "complete",
                                    "no"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `no` - no\n* `complete` - complete",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "verdict",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "no",
                                    "posted",
                                    "rejected"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `no` - no\n* `posted` - posted\n* `rejected` - rejected",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleRecommendationDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/recs/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_recs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle recommendation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/runtime/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_runtime_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleRuntimeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/orgs/{org_id}/vehicles/{vehicle_id}/runtime/{id}/": {
            "get": {
                "operationId": "vehicle_orgs_vehicles_runtime_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle runtime.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRuntime"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/related-orgs/{related_id}/vehicles/": {
            "get": {
                "operationId": "vehicle_sers_related_orgs_vehicles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "gos_number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-order",
                                    "-updated_at",
                                    "created_at",
                                    "order",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `order` - Order\n* `-order` - Order (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sn",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSerVehicleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/related-orgs/{related_id}/vehicles/{id}/": {
            "get": {
                "operationId": "vehicle_sers_related_orgs_vehicles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "related_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "gos_number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-order",
                                    "-updated_at",
                                    "created_at",
                                    "order",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `order` - Order\n* `-order` - Order (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sn",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSerVehicleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{id}/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/docs/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_docs_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleDocumentationDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_sers_vehicles_docs_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/docs/{id}/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_docs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle documentation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_sers_vehicles_docs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle documentation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/notes/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_notes_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleNoteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_sers_vehicles_notes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleNote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleNote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleNote"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleNote"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/notes/{id}/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_notes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle note.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleNote"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_sers_vehicles_notes_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle note.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleNote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleNote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleNote"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleNote"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_sers_vehicles_notes_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle note.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/photos/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_photos_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehiclePhotoDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_sers_vehicles_photos_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePhotoDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePhotoDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehiclePhotoDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePhotoDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/photos/{id}/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_photos_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle photo.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePhotoDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_sers_vehicles_photos_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle photo.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehiclePhotoUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehiclePhotoUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehiclePhotoUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehiclePhotoUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_sers_vehicles_photos_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle photo.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/recs/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_recs_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "level",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "critical",
                                    "info",
                                    "warning"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `info` - info\n* `warning` - warning\n* `critical` - critical",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "solution",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "complete",
                                    "no"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `no` - no\n* `complete` - complete",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "verdict",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "no",
                                    "posted",
                                    "rejected"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `no` - no\n* `posted` - posted\n* `rejected` - rejected",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleRecommendationDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_sers_vehicles_recs_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/recs/{id}/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_recs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle recommendation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_sers_vehicles_recs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle recommendation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleRecommendationDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleRecommendationDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleRecommendationDetailed"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_sers_vehicles_recs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle recommendation.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/runtime/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_runtime_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedVehicleRuntimeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "vehicle_sers_vehicles_runtime_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRuntime"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRuntime"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VehicleRuntime"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRuntime"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/vehicle/sers/{org_id}/vehicles/{vehicle_id}/runtime/{id}/": {
            "get": {
                "operationId": "vehicle_sers_vehicles_runtime_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle runtime.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRuntime"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "vehicle_sers_vehicles_runtime_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle runtime.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleRuntime"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleRuntime"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedVehicleRuntime"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VehicleRuntime"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "vehicle_sers_vehicles_runtime_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle runtime.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "vehicle_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "vehicle"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/work/m2m/chat-button/": {
            "post": {
                "operationId": "work_m2m_chat_button_create",
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatButton"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatButton"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatButton"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatButton"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/m2m/chat-push/": {
            "post": {
                "operationId": "work_m2m_chat_push_create",
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatPush"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatPush"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatPush"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatPush"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/m2m/chat-status/": {
            "post": {
                "operationId": "work_m2m_chat_status_create",
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatStatus"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatStatus"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatStatus"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "tokenAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatStatus"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/chat-tokens/": {
            "post": {
                "operationId": "work_orgs_chat_tokens_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/my-geo/": {
            "get": {
                "operationId": "work_orgs_my_geo_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-real_date",
                                    "created_at",
                                    "real_date"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `real_date` - Real date\n* `-real_date` - Real date (descending)\n* `created_at` - Created at\n* `-created_at` - Created at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkEmployeeGeolocationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_orgs_my_geo_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/sers/": {
            "get": {
                "operationId": "work_orgs_sers_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkServiceCenterList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/sers/{id}/": {
            "get": {
                "operationId": "work_orgs_sers_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkServiceCenter"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/sers/search/": {
            "post": {
                "operationId": "work_orgs_sers_search_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkServiceCenterSearch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkServiceCenterSearch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkServiceCenterSearch"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkServiceCenterSearch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/": {
            "get": {
                "operationId": "work_orgs_tasks_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrgWorkTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_orgs_tasks_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrgWorkTaskEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrgWorkTaskEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrgWorkTaskEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{id}/": {
            "get": {
                "operationId": "work_orgs_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "work_orgs_tasks_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrgWorkTaskEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrgWorkTaskEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedOrgWorkTaskEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "work_orgs_tasks_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{id}/customer/": {
            "patch": {
                "operationId": "work_orgs_tasks_customer_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskMeCustomer"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskMeCustomer"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskMeCustomer"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{id}/geo/": {
            "get": {
                "operationId": "work_orgs_tasks_geo_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskGeo"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{id}/result/": {
            "get": {
                "operationId": "work_orgs_tasks_result_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{id}/result-mark/": {
            "patch": {
                "operationId": "work_orgs_tasks_result_mark_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskMarkResult"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskMarkResult"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskMarkResult"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{task_id}/attachments/": {
            "get": {
                "operationId": "work_orgs_tasks_attachments_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-id",
                                    "-updated_at",
                                    "created_at",
                                    "id",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `id` - Id\n* `-id` - Id (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskAttachmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_orgs_tasks_attachments_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskAttachment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskAttachment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskAttachment"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{task_id}/attachments/{id}/": {
            "get": {
                "operationId": "work_orgs_tasks_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task attachment.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "work_orgs_tasks_attachments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task attachment.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskAttachment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskAttachment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskAttachment"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "work_orgs_tasks_attachments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task attachment.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{task_id}/reviews/": {
            "get": {
                "operationId": "work_orgs_tasks_reviews_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkReviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_orgs_tasks_reviews_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkReview"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkReview"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkReview"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkReview"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{task_id}/reviews/{id}/": {
            "get": {
                "operationId": "work_orgs_tasks_reviews_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work review.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkReview"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "work_orgs_tasks_reviews_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work review.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkReview"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkReview"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkReview"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkReview"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "work_orgs_tasks_reviews_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work review.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{task_id}/statuses/": {
            "get": {
                "operationId": "work_orgs_tasks_statuses_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "message_uuid",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "-verdict_date",
                                    "created_at",
                                    "updated_at",
                                    "verdict_date"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `verdict_date` - Verdict date\n* `-verdict_date` - Verdict date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskStatusChangeDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/{task_id}/statuses/{uuid}/": {
            "get": {
                "operationId": "work_orgs_tasks_statuses_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this work task status change.",
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskStatusChangeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/full/": {
            "get": {
                "operationId": "work_orgs_tasks_full_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/orgs/{org_id}/tasks/geos/": {
            "get": {
                "operationId": "work_orgs_tasks_geos_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskGeoList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/chat-tokens/": {
            "post": {
                "operationId": "work_sers_chat_tokens_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatToken"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatToken"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/employees/": {
            "get": {
                "operationId": "work_sers_employees_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_owner",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "client",
                                "coordinator",
                                "engineer",
                                "server"
                            ]
                        },
                        "description": "* `server` - server\n* `client` - client\n* `engineer` - engineer\n* `coordinator` - coordinator"
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkEmployeeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/employees/{id}/": {
            "get": {
                "operationId": "work_sers_employees_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkEmployee"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/my-geo/": {
            "get": {
                "operationId": "work_sers_my_geo_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-real_date",
                                    "created_at",
                                    "real_date"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `real_date` - Real date\n* `-real_date` - Real date (descending)\n* `created_at` - Created at\n* `-created_at` - Created at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkEmployeeGeolocationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_sers_my_geo_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/orgs/": {
            "get": {
                "operationId": "work_sers_orgs_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkOrganizationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/orgs/{id}/": {
            "get": {
                "operationId": "work_sers_orgs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkOrganization"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/": {
            "get": {
                "operationId": "work_sers_tasks_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSerWorkTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_sers_tasks_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SerWorkTaskEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/SerWorkTaskEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/SerWorkTaskEdit"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{id}/": {
            "get": {
                "operationId": "work_sers_tasks_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{id}/executors/": {
            "patch": {
                "operationId": "work_sers_tasks_executors_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskExecutor"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskExecutor"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskExecutor"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{id}/geo/": {
            "get": {
                "operationId": "work_sers_tasks_geo_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskGeo"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{id}/result/": {
            "get": {
                "operationId": "work_sers_tasks_result_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "work_sers_tasks_result_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskSaveResult"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskSaveResult"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskSaveResult"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{id}/result-apply/": {
            "patch": {
                "operationId": "work_sers_tasks_result_apply_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{id}/result-edit/": {
            "patch": {
                "operationId": "work_sers_tasks_result_edit_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskEditResult"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskEditResult"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskEditResult"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskResult"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/attachments/": {
            "get": {
                "operationId": "work_sers_tasks_attachments_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-id",
                                    "-updated_at",
                                    "created_at",
                                    "id",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `id` - Id\n* `-id` - Id (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskAttachmentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_sers_tasks_attachments_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskAttachment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskAttachment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskAttachment"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/attachments/{id}/": {
            "get": {
                "operationId": "work_sers_tasks_attachments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task attachment.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "work_sers_tasks_attachments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task attachment.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskAttachment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskAttachment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkTaskAttachment"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskAttachment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "work_sers_tasks_attachments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work task attachment.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/reviews/": {
            "get": {
                "operationId": "work_sers_tasks_reviews_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "value",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkReviewList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_sers_tasks_reviews_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkReview"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkReview"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkReview"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkReview"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/reviews/{id}/": {
            "get": {
                "operationId": "work_sers_tasks_reviews_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work review.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkReview"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "work_sers_tasks_reviews_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work review.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkReview"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkReview"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkReview"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkReview"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "work_sers_tasks_reviews_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this work review.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/routes/": {
            "get": {
                "operationId": "work_sers_tasks_routes_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "state",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "cancel",
                                    "done",
                                    "prepare",
                                    "ready",
                                    "rebuilt",
                                    "start",
                                    "stop"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `prepare` - prepare\n* `ready` - ready\n* `rebuilt` - rebuilt\n* `start` - start\n* `stop` - stop\n* `done` - done\n* `cancel` - cancel",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskRouteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "work_sers_tasks_routes_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskRoute"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskRoute"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkTaskRoute"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskRoute"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/routes/{uuid}/": {
            "get": {
                "operationId": "work_sers_tasks_routes_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this task route.",
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskRoute"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/statuses/": {
            "get": {
                "operationId": "work_sers_tasks_statuses_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "message_uuid",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "-verdict_date",
                                    "created_at",
                                    "updated_at",
                                    "verdict_date"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `verdict_date` - Verdict date\n* `-verdict_date` - Verdict date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskStatusChangeDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/{task_id}/statuses/{uuid}/": {
            "get": {
                "operationId": "work_sers_tasks_statuses_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "task_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "uuid",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "A UUID string identifying this work task status change.",
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkTaskStatusChangeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/full/": {
            "get": {
                "operationId": "work_sers_tasks_full_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskDetailedList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/geos/": {
            "get": {
                "operationId": "work_sers_tasks_geos_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkTaskGeoList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/tasks/verbose/": {
            "get": {
                "operationId": "work_sers_tasks_verbose_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assistants",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "coordinator",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "customer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "executor",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "ids",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "mark",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "archived",
                                    "delete",
                                    "draft",
                                    "posted",
                                    "reject"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-status_date",
                                    "-updated_at",
                                    "created_at",
                                    "status_date",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `status_date` - Status date\n* `-status_date` - Status date (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "approval",
                                    "done",
                                    "on_way",
                                    "pause",
                                    "processing",
                                    "search",
                                    "wait",
                                    "work"
                                ]
                            }
                        },
                        "description": "Multiple values may be separated by commas.\n\n* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "vehicle",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSerWorkTaskVerboseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/vehicles/": {
            "get": {
                "operationId": "work_sers_vehicles_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "gos_number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "model",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-order",
                                    "-updated_at",
                                    "created_at",
                                    "order",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)\n* `order` - Order\n* `-order` - Order (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "organization",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "service_center",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "description": "Multiple values may be separated by commas.",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "sn",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkVehicleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/work/sers/{org_id}/vehicles/{id}/": {
            "get": {
                "operationId": "work_sers_vehicles_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this vehicle.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "work"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkVehicle"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountRegistration": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "pattern": "^[\\w.@+-]+$",
                        "minLength": 10,
                        "maxLength": 80
                    },
                    "profile": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DefaultProfile"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "writeOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "ok",
                    "password",
                    "refresh",
                    "uid",
                    "username"
                ]
            },
            "AccountRegistrationRetry": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "pattern": "^[\\w.@+-]+$",
                        "minLength": 10,
                        "maxLength": 80
                    },
                    "profile": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/DefaultProfile"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "writeOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "ok",
                    "password",
                    "refresh",
                    "uid",
                    "username"
                ]
            },
            "Address": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "value": {
                        "type": "string",
                        "maxLength": 250
                    },
                    "region": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Region"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "readOnly": true
                    },
                    "source": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SourceEnum"
                            }
                        ],
                        "default": "user"
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "is_clean": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_final": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "is_clean",
                    "is_final",
                    "region"
                ]
            },
            "ChatButton": {
                "type": "object",
                "properties": {
                    "task": {
                        "type": "integer"
                    },
                    "employee": {
                        "type": "integer"
                    },
                    "message_uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "['rejected', 'applied', 'apply', 'reject']"
                    },
                    "button_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    }
                },
                "required": [
                    "employee",
                    "message_uuid",
                    "name",
                    "task"
                ]
            },
            "ChatPush": {
                "type": "object",
                "properties": {
                    "task": {
                        "type": "integer"
                    },
                    "employee": {
                        "type": "integer"
                    },
                    "message_uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "text": {
                        "type": "string"
                    }
                },
                "required": [
                    "employee",
                    "message_uuid",
                    "task",
                    "text"
                ]
            },
            "ChatStatus": {
                "type": "object",
                "properties": {
                    "task": {
                        "type": "integer"
                    },
                    "employee": {
                        "type": "integer"
                    },
                    "message_uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string",
                        "description": "['search', 'processing', 'approval', 'wait', 'on_way', 'pause', 'work', 'done']"
                    },
                    "edits": {}
                },
                "required": [
                    "edits",
                    "employee",
                    "message_uuid",
                    "status",
                    "task"
                ]
            },
            "ChatToken": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "ControlPoint": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "is_permanent": {
                        "type": "boolean",
                        "title": "Permanent"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "updated_at"
                ]
            },
            "CookieTokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access"
                ]
            },
            "DaDataOrganization": {
                "type": "object",
                "properties": {
                    "inn": {
                        "type": "string"
                    },
                    "kpp": {
                        "type": "string"
                    },
                    "ogrn": {
                        "type": "string"
                    },
                    "ogrn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name_full_with_opf": {
                        "type": "string"
                    },
                    "name_short_with_opf": {
                        "type": "string"
                    },
                    "name_latin": {
                        "type": "string"
                    },
                    "name_full": {
                        "type": "string"
                    },
                    "name_short": {
                        "type": "string"
                    },
                    "owner_name": {
                        "type": "string"
                    },
                    "state_status": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/DaDataSimpleAddress"
                    }
                },
                "required": [
                    "address",
                    "inn",
                    "kpp",
                    "name_full",
                    "name_full_with_opf",
                    "name_latin",
                    "name_short",
                    "name_short_with_opf",
                    "ogrn",
                    "ogrn_date",
                    "owner_name",
                    "state_status",
                    "type"
                ]
            },
            "DaDataSimpleAddress": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "latitude",
                    "longitude",
                    "value"
                ]
            },
            "DefaultProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "telegram": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "whatsapp": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "viber": {
                        "type": "string",
                        "maxLength": 120
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at"
                ]
            },
            "Device": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/TypeEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_agent": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "token",
                    "type",
                    "updated_at",
                    "user"
                ]
            },
            "EmployeeDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "profile",
                    "role",
                    "updated_at"
                ]
            },
            "EmployeeGeo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "geolocation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmployeeGeolocation"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "created_at",
                    "geolocation",
                    "id",
                    "organization",
                    "role",
                    "updated_at"
                ]
            },
            "EmployeeGeolocation": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "lon": {
                        "type": "number",
                        "format": "double",
                        "title": "Longitude"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double",
                        "title": "Latitude"
                    },
                    "real_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "lat",
                    "lon",
                    "real_date",
                    "uuid"
                ]
            },
            "ExecutorLevelEnum": {
                "enum": [
                    "info",
                    "warning",
                    "critical"
                ],
                "type": "string",
                "description": "* `info` - info\n* `warning` - warning\n* `critical` - critical"
            },
            "KeyEnum": {
                "enum": [
                    "vehicle_catalog"
                ],
                "type": "string",
                "description": "* `vehicle_catalog` - vehicle_catalog"
            },
            "LevelEnum": {
                "enum": [
                    "info",
                    "warning",
                    "critical"
                ],
                "type": "string",
                "description": "* `info` - info\n* `warning` - warning\n* `critical` - critical"
            },
            "MeaningEnum": {
                "enum": [
                    "info",
                    "problem",
                    "recommendation"
                ],
                "type": "string",
                "description": "* `info` - info\n* `problem` - problem\n* `recommendation` - recommendation"
            },
            "MyEmployment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "Owner"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "profile",
                    "role",
                    "updated_at"
                ]
            },
            "MyInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_username": {
                        "type": "string",
                        "title": "Username",
                        "maxLength": 120
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "maxLength": 254
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "title": "Accepted"
                    },
                    "accept_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "expiry_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "creator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "suggest": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "created_at",
                    "creator",
                    "id",
                    "is_expired",
                    "organization",
                    "profile",
                    "role",
                    "updated_at"
                ]
            },
            "MyOrgInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "settings": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceCenter"
                            }
                        ],
                        "readOnly": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "identifier": {
                        "type": "string",
                        "maxLength": 125
                    },
                    "identifier_kind": {
                        "type": "string",
                        "maxLength": 28
                    },
                    "as_new": {
                        "type": "boolean",
                        "title": "Created as new"
                    },
                    "is_approved": {
                        "type": "boolean",
                        "title": "Approved"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "reject_message": {
                        "type": "string"
                    },
                    "creator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "creator",
                    "id",
                    "identifier",
                    "is_rejected",
                    "name",
                    "organization",
                    "profile",
                    "requisites",
                    "service_center",
                    "updated_at"
                ]
            },
            "MyUserAll": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Admin email",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_activated": {
                        "type": "boolean",
                        "title": "Activated"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "employments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyEmployment"
                        },
                        "readOnly": true
                    },
                    "user_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyInvite"
                        },
                        "readOnly": true
                    },
                    "org_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyOrgInvite"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "employments",
                    "id",
                    "org_invites",
                    "profile",
                    "user_invites",
                    "username"
                ]
            },
            "MyUserEmployment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Admin email",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_activated": {
                        "type": "boolean",
                        "title": "Activated"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "employments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyEmployment"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "employments",
                    "id",
                    "profile",
                    "username"
                ]
            },
            "MyUserInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Admin email",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_activated": {
                        "type": "boolean",
                        "title": "Activated"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "user_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyInvite"
                        },
                        "readOnly": true
                    },
                    "org_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyOrgInvite"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "org_invites",
                    "profile",
                    "user_invites",
                    "username"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "text": {
                        "type": "string"
                    },
                    "payload": {},
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "created_at",
                    "id",
                    "organization",
                    "text",
                    "title"
                ]
            },
            "OrgWorkTask": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mark": {
                        "$ref": "#/components/schemas/WorkTaskMark"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "vehicle": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        ],
                        "readOnly": true
                    },
                    "executor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "coordinator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "approval": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskApproval"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "status_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "customer": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    },
                    "assistants": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "involved": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "approval",
                    "coordinator",
                    "created_at",
                    "executor",
                    "id",
                    "mark",
                    "number",
                    "organization",
                    "service_center",
                    "status",
                    "updated_at",
                    "vehicle"
                ]
            },
            "OrgWorkTaskEdit": {
                "type": "object",
                "properties": {
                    "mark": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskMark"
                            }
                        ],
                        "default": "posted"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "approval": {
                        "$ref": "#/components/schemas/WorkTaskCustomerApproval"
                    },
                    "new_photos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskAttachment"
                        },
                        "writeOnly": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "vehicle": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    }
                },
                "required": [
                    "approval"
                ]
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "title": "Фото"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "about": {
                        "type": "string"
                    },
                    "requisites": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Organization requisites"
                    },
                    "contact": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Organization contact"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "is_service_center",
                    "name",
                    "updated_at"
                ]
            },
            "OrganizationCacheFile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_personal": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "key": {
                        "$ref": "#/components/schemas/KeyEnum"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "format_version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "id",
                    "is_personal",
                    "key",
                    "updated_at"
                ]
            },
            "OrganizationDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "requisites": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationRequisites"
                            }
                        ],
                        "readOnly": true
                    },
                    "settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            }
                        ],
                        "readOnly": true
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceCenter"
                            }
                        ],
                        "readOnly": true
                    },
                    "contact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Active"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "about": {
                        "type": "string"
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "id",
                    "is_active",
                    "is_service_center",
                    "name",
                    "requisites",
                    "service_center",
                    "settings",
                    "updated_at"
                ]
            },
            "OrganizationInn": {
                "type": "object",
                "properties": {
                    "inn": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DaDataOrganization"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "inn",
                    "results"
                ]
            },
            "OrganizationInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "identifier": {
                        "type": "string",
                        "maxLength": 125
                    },
                    "identifier_kind": {
                        "type": "string",
                        "readOnly": true
                    },
                    "as_new": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Created as new"
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Approved"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "reject_message": {
                        "type": "string",
                        "readOnly": true
                    },
                    "creator": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "requisites": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Organization requisites"
                    },
                    "profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "contact": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Organization contact"
                    },
                    "settings": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Organization settings"
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "as_new",
                    "created_at",
                    "creator",
                    "id",
                    "identifier",
                    "identifier_kind",
                    "is_approved",
                    "is_rejected",
                    "name",
                    "organization",
                    "reject_message",
                    "updated_at",
                    "verdict_date"
                ]
            },
            "OrganizationInviteDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "settings": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceCenter"
                            }
                        ],
                        "readOnly": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "identifier": {
                        "type": "string",
                        "maxLength": 125
                    },
                    "identifier_kind": {
                        "type": "string",
                        "readOnly": true
                    },
                    "as_new": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Created as new"
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Approved"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "reject_message": {
                        "type": "string"
                    },
                    "creator": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "as_new",
                    "contact",
                    "created_at",
                    "creator",
                    "id",
                    "identifier",
                    "identifier_kind",
                    "is_approved",
                    "is_rejected",
                    "name",
                    "organization",
                    "profile",
                    "requisites",
                    "service_center",
                    "updated_at",
                    "verdict_date"
                ]
            },
            "OrganizationPublic": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "about": {
                        "type": "string"
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "id",
                    "is_service_center",
                    "name",
                    "requisites",
                    "updated_at"
                ]
            },
            "OrganizationRequisites": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "physical_address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "legal_address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "postal_address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "kpp": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "inn": {
                        "type": "string",
                        "maxLength": 12
                    },
                    "ogrn": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "ogrn_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date",
                        "title": "Ogrn issue date"
                    }
                },
                "required": [
                    "created_at",
                    "full_name",
                    "id",
                    "updated_at"
                ]
            },
            "OrganizationSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "time_zone",
                    "updated_at"
                ]
            },
            "PaginatedControlPointList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ControlPoint"
                }
            },
            "PaginatedDeviceList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Device"
                }
            },
            "PaginatedEmployeeDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/EmployeeDetailed"
                }
            },
            "PaginatedNotificationList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Notification"
                }
            },
            "PaginatedOrgWorkTaskList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrgWorkTask"
                }
            },
            "PaginatedOrganizationInviteList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrganizationInvite"
                }
            },
            "PaginatedOrganizationList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Organization"
                }
            },
            "PaginatedOrganizationPublicList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrganizationPublic"
                }
            },
            "PaginatedSerVehicleList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SerVehicle"
                }
            },
            "PaginatedSerWorkTaskList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SerWorkTask"
                }
            },
            "PaginatedSerWorkTaskVerboseList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/SerWorkTaskVerbose"
                }
            },
            "PaginatedUserInviteList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/UserInvite"
                }
            },
            "PaginatedVehicleBrandList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleBrand"
                }
            },
            "PaginatedVehicleDocumentationDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleDocumentationDetailed"
                }
            },
            "PaginatedVehicleEquipmentList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleEquipment"
                }
            },
            "PaginatedVehicleList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Vehicle"
                }
            },
            "PaginatedVehicleModelDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleModelDetailed"
                }
            },
            "PaginatedVehicleNoteList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleNote"
                }
            },
            "PaginatedVehiclePhotoDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehiclePhotoDetailed"
                }
            },
            "PaginatedVehicleRecommendationDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                }
            },
            "PaginatedVehicleRuntimeList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/VehicleRuntime"
                }
            },
            "PaginatedWorkEmployeeGeolocationList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkEmployeeGeolocation"
                }
            },
            "PaginatedWorkEmployeeList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkEmployee"
                }
            },
            "PaginatedWorkOrganizationList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkOrganization"
                }
            },
            "PaginatedWorkReviewList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkReview"
                }
            },
            "PaginatedWorkServiceCenterList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkServiceCenter"
                }
            },
            "PaginatedWorkTaskAttachmentList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkTaskAttachment"
                }
            },
            "PaginatedWorkTaskDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkTaskDetailed"
                }
            },
            "PaginatedWorkTaskGeoList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkTaskGeo"
                }
            },
            "PaginatedWorkTaskRouteList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkTaskRoute"
                }
            },
            "PaginatedWorkTaskStatusChangeDetailedList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkTaskStatusChangeDetailed"
                }
            },
            "PaginatedWorkVehicleList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/WorkVehicle"
                }
            },
            "PatchedControlPoint": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "address": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "is_permanent": {
                        "type": "boolean",
                        "title": "Permanent"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "PatchedEmployeeDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "PatchedOrgWorkTaskEdit": {
                "type": "object",
                "properties": {
                    "mark": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskMark"
                            }
                        ],
                        "default": "posted"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "approval": {
                        "$ref": "#/components/schemas/WorkTaskCustomerApproval"
                    },
                    "new_photos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskAttachment"
                        },
                        "writeOnly": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "vehicle": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    }
                }
            },
            "PatchedOrganizationDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "requisites": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationRequisites"
                            }
                        ],
                        "readOnly": true
                    },
                    "settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            }
                        ],
                        "readOnly": true
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceCenter"
                            }
                        ],
                        "readOnly": true
                    },
                    "contact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Active"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "about": {
                        "type": "string"
                    }
                }
            },
            "PatchedOrganizationRequisites": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "physical_address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "legal_address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "postal_address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "kpp": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "inn": {
                        "type": "string",
                        "maxLength": 12
                    },
                    "ogrn": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "ogrn_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date",
                        "title": "Ogrn issue date"
                    }
                }
            },
            "PatchedOrganizationSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "telegram": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "whatsapp": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "viber": {
                        "type": "string",
                        "maxLength": 120
                    }
                }
            },
            "PatchedServiceCenter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "coverage_regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Region"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "coverage_radius": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "title": "Points radius"
                        },
                        "title": "Points radius"
                    }
                }
            },
            "PatchedUserPersonal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_activated": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Activated"
                    }
                }
            },
            "PatchedVehicleBrand": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "is_public": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedVehicleEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_hidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sn": {
                        "type": "string",
                        "title": "Serial number",
                        "maxLength": 254
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "manufacture_date": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "gos_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "hide_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "model": {
                        "type": "integer",
                        "title": "Модель техники"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "PatchedVehicleModelDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "is_public": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "brand": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleBrand"
                            }
                        ],
                        "readOnly": true
                    },
                    "equipment": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleEquipment"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name_prefix": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedVehicleNote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "is_personal": {
                        "type": "boolean",
                        "title": "Personal"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedVehiclePhotoUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "meaning": {
                        "$ref": "#/components/schemas/MeaningEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "file": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "client_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "recommendation": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedVehicleRecommendationDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "level": {
                        "$ref": "#/components/schemas/LevelEnum"
                    },
                    "executor_level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutorLevelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "solution": {
                        "$ref": "#/components/schemas/SolutionEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_completed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "complete_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "executor_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "solution_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedVehicleRuntime": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_completed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "value": {
                        "type": "integer"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkReview": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "value": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "task": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "recipient": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkTaskAttachment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "file": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "client_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "task": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkTaskEditResult": {
                "type": "object",
                "properties": {
                    "runtime": {
                        "$ref": "#/components/schemas/VehicleRuntimeEditResult"
                    },
                    "recommendations": {
                        "$ref": "#/components/schemas/VehicleRecommendationEditResult"
                    },
                    "photos": {
                        "$ref": "#/components/schemas/WorkTaskAttachmentEditResult"
                    },
                    "report": {
                        "type": "string",
                        "maxLength": 510
                    }
                }
            },
            "PatchedWorkTaskExecutor": {
                "type": "object",
                "properties": {
                    "coordinator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "executor": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "assistants": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedWorkTaskMarkResult": {
                "type": "object",
                "properties": {
                    "customer_mark": {
                        "$ref": "#/components/schemas/WorkTaskResultMark"
                    }
                }
            },
            "PatchedWorkTaskMeCustomer": {
                "type": "object",
                "properties": {
                    "customer": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    }
                }
            },
            "PatchedWorkTaskSaveResult": {
                "type": "object",
                "properties": {
                    "runtime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRuntimeResult"
                        }
                    },
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRecommendationResult"
                        }
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskAttachment"
                        }
                    },
                    "report": {
                        "type": "string",
                        "maxLength": 510
                    }
                }
            },
            "PointRadius": {
                "type": "object",
                "properties": {
                    "lon_center": {
                        "type": "number",
                        "format": "double",
                        "title": "Longitude center"
                    },
                    "lat_center": {
                        "type": "number",
                        "format": "double",
                        "title": "Latitude center"
                    },
                    "radius": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "lat_center",
                    "lon_center"
                ]
            },
            "Profile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "telegram": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "whatsapp": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "viber": {
                        "type": "string",
                        "maxLength": 120
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at"
                ]
            },
            "ProviderEnum": {
                "enum": [
                    "manual",
                    "openroute",
                    "twogis"
                ],
                "type": "string",
                "description": "* `manual` - manual\n* `openroute` - openroute\n* `twogis` - twogis"
            },
            "Region": {
                "type": "object",
                "properties": {
                    "iso_3166_code": {
                        "type": "string",
                        "title": "Iso 3166",
                        "maxLength": 15
                    },
                    "local_code": {
                        "type": "string",
                        "title": "Code",
                        "maxLength": 15
                    },
                    "local_name": {
                        "type": "string",
                        "title": "Name",
                        "maxLength": 120
                    }
                }
            },
            "RoleEnum": {
                "enum": [
                    "server",
                    "client",
                    "engineer",
                    "coordinator"
                ],
                "type": "string",
                "description": "* `server` - server\n* `client` - client\n* `engineer` - engineer\n* `coordinator` - coordinator"
            },
            "RuntimeUnitEnum": {
                "enum": [
                    "no",
                    "mh",
                    "km",
                    "he"
                ],
                "type": "string",
                "description": "* `no` - no\n* `mh` - mh\n* `km` - km\n* `he` - he"
            },
            "SerVehicle": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_hidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleSummary"
                            }
                        ],
                        "readOnly": true
                    },
                    "model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleModelDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "gost_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sn": {
                        "type": "string",
                        "title": "Serial number",
                        "maxLength": 254
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "manufacture_date": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "gos_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "hide_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "gost_number",
                    "hide_date",
                    "id",
                    "is_hidden",
                    "model",
                    "name",
                    "organization",
                    "summary",
                    "updated_at"
                ]
            },
            "SerWorkTask": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mark": {
                        "$ref": "#/components/schemas/WorkTaskMark"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "vehicle": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        ],
                        "readOnly": true
                    },
                    "customer": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "approval": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskApproval"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "status_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "coordinator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "executor": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    },
                    "assistants": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "involved": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "approval",
                    "created_at",
                    "customer",
                    "executor",
                    "id",
                    "mark",
                    "number",
                    "organization",
                    "status",
                    "updated_at",
                    "vehicle"
                ]
            },
            "SerWorkTaskEdit": {
                "type": "object",
                "properties": {
                    "mark": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskMark"
                            }
                        ],
                        "default": "posted"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "approval": {
                        "$ref": "#/components/schemas/WorkTaskCoordinatorApproval"
                    },
                    "new_photos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskAttachment"
                        },
                        "writeOnly": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "vehicle": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    }
                },
                "required": [
                    "approval",
                    "organization"
                ]
            },
            "SerWorkTaskVerbose": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mark": {
                        "$ref": "#/components/schemas/WorkTaskMark"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "vehicle": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        ],
                        "readOnly": true
                    },
                    "approval": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskApproval"
                            }
                        ],
                        "readOnly": true
                    },
                    "customer": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "executor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "status_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "coordinator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    },
                    "assistants": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "involved": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "approval",
                    "created_at",
                    "customer",
                    "executor",
                    "id",
                    "mark",
                    "number",
                    "organization",
                    "service_center",
                    "status",
                    "updated_at",
                    "vehicle"
                ]
            },
            "ServiceCenter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "coverage_regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Region"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "coverage_radius": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "title": "Points radius"
                        },
                        "title": "Points radius"
                    }
                },
                "required": [
                    "coverage_regions",
                    "created_at",
                    "id",
                    "updated_at"
                ]
            },
            "SolutionEnum": {
                "enum": [
                    "no",
                    "complete"
                ],
                "type": "string",
                "description": "* `no` - no\n* `complete` - complete"
            },
            "SourceEnum": {
                "enum": [
                    "user",
                    "osm",
                    "dadata",
                    "fias"
                ],
                "type": "string",
                "description": "* `user` - user\n* `osm` - osm\n* `dadata` - dadata\n* `fias` - fias"
            },
            "StateEnum": {
                "enum": [
                    "prepare",
                    "ready",
                    "rebuilt",
                    "start",
                    "stop",
                    "done",
                    "cancel"
                ],
                "type": "string",
                "description": "* `prepare` - prepare\n* `ready` - ready\n* `rebuilt` - rebuilt\n* `start` - start\n* `stop` - stop\n* `done` - done\n* `cancel` - cancel"
            },
            "StatusEnum": {
                "enum": [
                    "search",
                    "processing",
                    "approval",
                    "wait",
                    "on_way",
                    "pause",
                    "work",
                    "done"
                ],
                "type": "string",
                "description": "* `search` - search\n* `processing` - processing\n* `approval` - approval\n* `wait` - wait\n* `on_way` - on_way\n* `pause` - pause\n* `work` - work\n* `done` - done"
            },
            "TokenBlacklist": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "TokenObtainPairSerializerV2": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "password",
                    "refresh",
                    "username"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenVerify": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "TotalVehicleSummaryPair": {
                "type": "object",
                "properties": {
                    "runtime_sum": {
                        "type": "integer",
                        "title": "Runtime summary"
                    },
                    "r_info_count": {
                        "type": "integer"
                    },
                    "r_warning_count": {
                        "type": "integer"
                    },
                    "r_critical_count": {
                        "type": "integer"
                    },
                    "r_complete_count": {
                        "type": "integer"
                    },
                    "r_incomplete_count": {
                        "type": "integer"
                    },
                    "t_active_count": {
                        "type": "integer"
                    },
                    "t_total_count": {
                        "type": "integer"
                    }
                }
            },
            "TypeEnum": {
                "enum": [
                    "none",
                    "db",
                    "websocket",
                    "email_app",
                    "fcm_app",
                    "fcm_web",
                    "hpk_app",
                    "apns_app"
                ],
                "type": "string",
                "description": "* `none` - none\n* `db` - db\n* `websocket` - websocket\n* `email_app` - email_app\n* `fcm_app` - fcm_app\n* `fcm_web` - fcm_web\n* `hpk_app` - hpk_app\n* `apns_app` - apns_app"
            },
            "UserAcceptInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "is_accepted",
                    "is_expired"
                ]
            },
            "UserActivation": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "ok",
                    "refresh",
                    "token",
                    "uid"
                ]
            },
            "UserDeleteAccount": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "ok",
                    "uid"
                ]
            },
            "UserDeleteAccountConfirm": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "ok",
                    "token"
                ]
            },
            "UserInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_username": {
                        "type": "string",
                        "title": "Username",
                        "maxLength": 120
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "maxLength": 254
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Accepted"
                    },
                    "accept_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expiry_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "creator": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "profile": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "suggest": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "accept_date",
                    "created_at",
                    "creator",
                    "expiry_date",
                    "id",
                    "is_accepted",
                    "is_expired",
                    "organization",
                    "profile",
                    "role",
                    "suggest",
                    "updated_at"
                ]
            },
            "UserInviteDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_username": {
                        "type": "string",
                        "title": "Username",
                        "maxLength": 120
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "maxLength": 254
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Accepted"
                    },
                    "accept_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expiry_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "creator": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "suggest": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "accept_date",
                    "created_at",
                    "creator",
                    "expiry_date",
                    "id",
                    "is_accepted",
                    "is_expired",
                    "organization",
                    "profile",
                    "role",
                    "suggest",
                    "updated_at"
                ]
            },
            "UserPersonal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_activated": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Activated"
                    }
                },
                "required": [
                    "date_joined",
                    "id",
                    "is_activated",
                    "is_staff",
                    "last_login",
                    "profile",
                    "username"
                ]
            },
            "UserResendActivation": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "writeOnly": true
                    }
                },
                "required": [
                    "ok",
                    "uid",
                    "username"
                ]
            },
            "UserResetPassword": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "ok",
                    "uid",
                    "username"
                ]
            },
            "UserResetPasswordConfirm": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "new_password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    }
                },
                "required": [
                    "new_password",
                    "ok",
                    "token",
                    "uid"
                ]
            },
            "Vehicle": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_hidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleSummary"
                            }
                        ],
                        "readOnly": true
                    },
                    "model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleModelDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "gost_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sn": {
                        "type": "string",
                        "title": "Serial number",
                        "maxLength": 254
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "manufacture_date": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "gos_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "hide_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "gost_number",
                    "hide_date",
                    "id",
                    "is_hidden",
                    "model",
                    "name",
                    "organization",
                    "summary",
                    "updated_at"
                ]
            },
            "VehicleAdditionVerdict": {
                "enum": [
                    "no",
                    "posted",
                    "rejected"
                ],
                "type": "string",
                "description": "* `no` - no\n* `posted` - posted\n* `rejected` - rejected"
            },
            "VehicleBrand": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "is_public": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "is_public",
                    "name",
                    "organization",
                    "updated_at"
                ]
            },
            "VehicleDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_hidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleSummary"
                            }
                        ],
                        "readOnly": true
                    },
                    "model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleModelDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "gost_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRecommendationDetailed"
                        },
                        "readOnly": true
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sn": {
                        "type": "string",
                        "title": "Serial number",
                        "maxLength": 254
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "manufacture_date": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "gos_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "hide_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "created_at",
                    "gost_number",
                    "id",
                    "is_hidden",
                    "model",
                    "name",
                    "organization",
                    "recommendations",
                    "summary",
                    "updated_at"
                ]
            },
            "VehicleDocumentationDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "file": {
                        "type": "string",
                        "format": "uri"
                    },
                    "is_public": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "model": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true,
                        "title": "Organization"
                    }
                },
                "required": [
                    "author",
                    "created_at",
                    "file",
                    "id",
                    "is_public",
                    "model",
                    "organization",
                    "service_center",
                    "updated_at"
                ]
            },
            "VehicleEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_hidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sn": {
                        "type": "string",
                        "title": "Serial number",
                        "maxLength": 254
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "manufacture_date": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "gos_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "hide_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "readOnly": true
                    },
                    "model": {
                        "type": "integer",
                        "title": "Модель техники"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "hide_date",
                    "id",
                    "is_hidden",
                    "organization",
                    "updated_at"
                ]
            },
            "VehicleEquipment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "icon": {
                        "type": "string",
                        "format": "uri"
                    },
                    "runtime_unit": {
                        "$ref": "#/components/schemas/RuntimeUnitEnum"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "runtime_unit"
                ]
            },
            "VehicleModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "is_public": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name_prefix": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "brand": {
                        "type": "integer"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "equipment": {
                        "type": "integer"
                    }
                },
                "required": [
                    "brand",
                    "created_at",
                    "id",
                    "is_public",
                    "name",
                    "organization",
                    "updated_at"
                ]
            },
            "VehicleModelDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "is_public": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "brand": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleBrand"
                            }
                        ],
                        "readOnly": true
                    },
                    "equipment": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleEquipment"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name_prefix": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 126
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "organization": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "brand",
                    "created_at",
                    "equipment",
                    "id",
                    "is_public",
                    "name",
                    "organization",
                    "updated_at"
                ]
            },
            "VehicleNote": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "is_personal": {
                        "type": "boolean",
                        "title": "Personal"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "created_at",
                    "id",
                    "service_center",
                    "updated_at",
                    "vehicle"
                ]
            },
            "VehiclePhotoDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "meaning": {
                        "$ref": "#/components/schemas/MeaningEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "file": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "client_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "recommendation": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "auditor",
                    "author",
                    "created_at",
                    "id",
                    "is_approved",
                    "is_rejected",
                    "meaning",
                    "recommendation",
                    "updated_at",
                    "vehicle",
                    "verdict"
                ]
            },
            "VehiclePhotoUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "meaning": {
                        "$ref": "#/components/schemas/MeaningEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "file": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "client_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "recommendation": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "auditor",
                    "author",
                    "created_at",
                    "file",
                    "id",
                    "is_approved",
                    "is_rejected",
                    "meaning",
                    "recommendation",
                    "updated_at",
                    "vehicle",
                    "verdict"
                ]
            },
            "VehicleRecommendation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "level": {
                        "$ref": "#/components/schemas/LevelEnum"
                    },
                    "executor_level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutorLevelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "solution": {
                        "$ref": "#/components/schemas/SolutionEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_completed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "complete_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "executor_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "solution_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "auditor": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "auditor",
                    "author",
                    "complete_date",
                    "created_at",
                    "executor_level",
                    "executor_title",
                    "id",
                    "is_approved",
                    "is_completed",
                    "is_rejected",
                    "level",
                    "service_center",
                    "solution",
                    "updated_at",
                    "vehicle",
                    "verdict"
                ]
            },
            "VehicleRecommendationDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "level": {
                        "$ref": "#/components/schemas/LevelEnum"
                    },
                    "executor_level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutorLevelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "solution": {
                        "$ref": "#/components/schemas/SolutionEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_completed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "complete_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "executor_title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "solution_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "auditor",
                    "author",
                    "complete_date",
                    "created_at",
                    "executor_level",
                    "executor_title",
                    "id",
                    "is_approved",
                    "is_completed",
                    "is_rejected",
                    "level",
                    "service_center",
                    "solution",
                    "updated_at",
                    "vehicle",
                    "verdict"
                ]
            },
            "VehicleRecommendationEditResult": {
                "type": "object",
                "properties": {
                    "new": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRecommendationResult"
                        }
                    },
                    "edit": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/VehicleRecommendationResult"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "VehicleRecommendationResult": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "level": {
                        "$ref": "#/components/schemas/LevelEnum"
                    },
                    "executor_level": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExecutorLevelEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "executor_title": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "executor_level",
                    "executor_title",
                    "level"
                ]
            },
            "VehicleRuntime": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/VehicleAdditionVerdict"
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_completed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "auditor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "value": {
                        "type": "integer"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "vehicle": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "service_center": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "auditor",
                    "author",
                    "created_at",
                    "id",
                    "is_completed",
                    "is_rejected",
                    "service_center",
                    "updated_at",
                    "value",
                    "vehicle",
                    "verdict"
                ]
            },
            "VehicleRuntimeEditResult": {
                "type": "object",
                "properties": {
                    "new": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRuntimeResult"
                        }
                    },
                    "edit": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/VehicleRuntimeResult"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "VehicleRuntimeResult": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "integer"
                    }
                },
                "required": [
                    "value"
                ]
            },
            "VehicleSummary": {
                "type": "object",
                "properties": {
                    "runtime_sum": {
                        "type": "integer",
                        "title": "Runtime summary"
                    },
                    "r_info_count": {
                        "type": "integer"
                    },
                    "r_warning_count": {
                        "type": "integer"
                    },
                    "r_critical_count": {
                        "type": "integer"
                    },
                    "r_complete_count": {
                        "type": "integer"
                    },
                    "r_incomplete_count": {
                        "type": "integer"
                    },
                    "t_active_count": {
                        "type": "integer"
                    },
                    "t_total_count": {
                        "type": "integer"
                    }
                }
            },
            "WorkEmployee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskShort"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "Owner"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "profile",
                    "role",
                    "tasks",
                    "updated_at"
                ]
            },
            "WorkEmployeeGeolocation": {
                "type": "object",
                "properties": {
                    "lon": {
                        "type": "number",
                        "format": "double",
                        "title": "Longitude"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double",
                        "title": "Latitude"
                    },
                    "real_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "device": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "task": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "writeOnly": true
                    },
                    "route": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid",
                        "writeOnly": true
                    }
                },
                "required": [
                    "lat",
                    "lon",
                    "real_date"
                ]
            },
            "WorkOrganization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskShort"
                        },
                        "readOnly": true
                    },
                    "summaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalVehicleSummaryPair"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "about": {
                        "type": "string"
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "id",
                    "is_service_center",
                    "name",
                    "requisites",
                    "summaries",
                    "tasks",
                    "updated_at"
                ]
            },
            "WorkReview": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "value": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "task": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "recipient": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "created_at",
                    "id",
                    "recipient",
                    "task",
                    "text",
                    "updated_at",
                    "value"
                ]
            },
            "WorkServiceCenter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "photo": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "summaries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TotalVehicleSummaryPair"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "site": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "about": {
                        "type": "string"
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "id",
                    "is_service_center",
                    "name",
                    "requisites",
                    "summaries",
                    "updated_at"
                ]
            },
            "WorkServiceCenterSearch": {
                "type": "object",
                "properties": {
                    "service_centers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkServiceCenter"
                        },
                        "readOnly": true
                    },
                    "region": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Region"
                            }
                        ],
                        "writeOnly": true
                    },
                    "radius": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PointRadius"
                            }
                        ],
                        "writeOnly": true
                    }
                },
                "required": [
                    "service_centers"
                ]
            },
            "WorkTaskApproval": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "customer_description": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "coordinator_description": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "executor_note": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "customer_approve_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "coordinator_approve_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "executor_approve_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "want_start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "plan_start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "fact_start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "want_complete_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "plan_complete_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "fact_complete_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "reject_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "reject_text": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "reject_initiator": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "reject_initiator",
                    "updated_at"
                ]
            },
            "WorkTaskAttachment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "file": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "client_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "task": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "created_at",
                    "id",
                    "task",
                    "updated_at"
                ]
            },
            "WorkTaskAttachmentEditResult": {
                "type": "object",
                "properties": {
                    "new": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskAttachment"
                        }
                    },
                    "edit": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/WorkTaskAttachment"
                        }
                    },
                    "remove": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "WorkTaskAttachmentShort": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "client_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    }
                },
                "required": [
                    "id"
                ]
            },
            "WorkTaskCheckGeo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "executor_mark": {
                        "type": "boolean"
                    },
                    "control_point": {
                        "$ref": "#/components/schemas/ControlPoint"
                    }
                },
                "required": [
                    "control_point",
                    "id"
                ]
            },
            "WorkTaskCoordinatorApproval": {
                "type": "object",
                "properties": {
                    "coordinator_description": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "coordinator_approve_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "plan_start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "plan_complete_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "WorkTaskCustomerApproval": {
                "type": "object",
                "properties": {
                    "customer_description": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "customer_approve_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "want_start_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "want_complete_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                }
            },
            "WorkTaskDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mark": {
                        "$ref": "#/components/schemas/WorkTaskMark"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationPublic"
                            }
                        ],
                        "readOnly": true
                    },
                    "vehicle": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Vehicle"
                            }
                        ],
                        "readOnly": true
                    },
                    "approval": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskApproval"
                            }
                        ],
                        "readOnly": true
                    },
                    "customer": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "coordinator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "executor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "status_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "parent": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "title": "Parent task"
                    },
                    "assistants": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "involved": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "approval",
                    "coordinator",
                    "created_at",
                    "customer",
                    "executor",
                    "id",
                    "mark",
                    "number",
                    "organization",
                    "service_center",
                    "status",
                    "updated_at",
                    "vehicle"
                ]
            },
            "WorkTaskEventVerdict": {
                "enum": [
                    "discuss",
                    "rejected",
                    "applied",
                    "removed"
                ],
                "type": "string",
                "description": "* `discuss` - discuss\n* `rejected` - rejected\n* `applied` - applied\n* `removed` - removed"
            },
            "WorkTaskGeo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "status_changes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskStatusChangeGeo"
                        }
                    },
                    "checklist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskCheckGeo"
                        }
                    },
                    "routes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskRoute"
                        }
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "executor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeGeo"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "checklist",
                    "executor",
                    "id",
                    "routes",
                    "status_changes"
                ]
            },
            "WorkTaskMark": {
                "enum": [
                    "draft",
                    "posted",
                    "reject",
                    "delete",
                    "archived"
                ],
                "type": "string",
                "description": "* `draft` - draft\n* `posted` - posted\n* `reject` - reject\n* `delete` - delete\n* `archived` - archived"
            },
            "WorkTaskResult": {
                "type": "object",
                "properties": {
                    "recommendations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRecommendation"
                        },
                        "readOnly": true
                    },
                    "runtime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VehicleRuntime"
                        },
                        "readOnly": true
                    },
                    "photos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskAttachmentShort"
                        },
                        "readOnly": true
                    },
                    "executor_report": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "coordinator_report": {
                        "type": "string",
                        "title": "Executor report",
                        "maxLength": 510
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "check_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "posted_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "customer_mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "customer_mark": {
                        "type": "string",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "customer_mark",
                    "photos",
                    "recommendations",
                    "runtime",
                    "updated_at"
                ]
            },
            "WorkTaskResultMark": {
                "enum": [
                    "no",
                    "rejected",
                    "applied"
                ],
                "type": "string",
                "description": "* `no` - no\n* `rejected` - rejected\n* `applied` - applied"
            },
            "WorkTaskRoute": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "provider": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ProviderEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "state": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "points": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskRoutePoint"
                        },
                        "readOnly": true
                    },
                    "geolocation": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmployeeGeolocation"
                        },
                        "readOnly": true
                    },
                    "start": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskRoutePoint"
                            }
                        ],
                        "writeOnly": true
                    },
                    "stops": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskRoutePoint"
                        },
                        "writeOnly": true
                    },
                    "end": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WorkTaskRoutePoint"
                            }
                        ],
                        "writeOnly": true
                    },
                    "duration": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "length": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "employee": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "task": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "duration",
                    "employee",
                    "end",
                    "geolocation",
                    "length",
                    "points",
                    "provider",
                    "start",
                    "state",
                    "stops",
                    "task",
                    "updated_at",
                    "uuid"
                ]
            },
            "WorkTaskRoutePoint": {
                "type": "object",
                "properties": {
                    "lon": {
                        "type": "number",
                        "format": "double",
                        "title": "Longitude"
                    },
                    "lat": {
                        "type": "number",
                        "format": "double",
                        "title": "Latitude"
                    }
                },
                "required": [
                    "lat",
                    "lon"
                ]
            },
            "WorkTaskShort": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mark": {
                        "$ref": "#/components/schemas/WorkTaskMark"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "status_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "customer": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "coordinator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "executor": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "readOnly": true
                    },
                    "assistants": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "involved": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "created_at",
                    "executor",
                    "id",
                    "mark",
                    "number",
                    "organization",
                    "status",
                    "updated_at"
                ]
            },
            "WorkTaskShortWithExecutor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mark": {
                        "$ref": "#/components/schemas/WorkTaskMark"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "executor": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "number": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "status_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "mark_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "organization": {
                        "type": "integer"
                    },
                    "customer": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "coordinator": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "assistants": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "involved": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "created_at",
                    "executor",
                    "id",
                    "mark",
                    "number",
                    "organization",
                    "status",
                    "updated_at"
                ]
            },
            "WorkTaskStatusChangeButton": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "active",
                    "name"
                ]
            },
            "WorkTaskStatusChangeDetailed": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/WorkTaskEventVerdict"
                    },
                    "initiator": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EmployeeDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "buttons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskStatusChangeButton"
                        },
                        "readOnly": true
                    },
                    "real_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "message_uuid": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "uuid"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "edits": {
                        "readOnly": true
                    }
                },
                "required": [
                    "buttons",
                    "edits",
                    "initiator",
                    "status",
                    "uuid",
                    "verdict"
                ]
            },
            "WorkTaskStatusChangeGeo": {
                "type": "object",
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "verdict": {
                        "$ref": "#/components/schemas/WorkTaskEventVerdict"
                    },
                    "verdict_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "status",
                    "uuid",
                    "verdict"
                ]
            },
            "WorkVehicle": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_hidden": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleSummary"
                            }
                        ],
                        "readOnly": true
                    },
                    "model": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/VehicleModelDetailed"
                            }
                        ],
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "gost_number": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkTaskShortWithExecutor"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "sn": {
                        "type": "string",
                        "title": "Serial number",
                        "maxLength": 254
                    },
                    "info": {
                        "type": "string",
                        "maxLength": 510
                    },
                    "manufacture_date": {
                        "type": [
                            "integer",
                            "null"
                        ]
                    },
                    "gos_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "order": {
                        "type": "number",
                        "format": "double"
                    },
                    "hide_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "gost_number",
                    "id",
                    "is_hidden",
                    "model",
                    "name",
                    "organization",
                    "summary",
                    "tasks",
                    "updated_at"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            },
            "tokenAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization",
                "description": "Token-based authentication with required prefix \"M2M-Chat\""
            }
        }
    }
}
