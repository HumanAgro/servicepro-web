{
    "openapi": "3.0.3",
    "info": {
        "title": "СервисПро",
        "version": "0.0.1 (v1)",
        "description": "Автодокументация"
    },
    "paths": {
        "/api/v1/account/actions/activation/": {
            "post": {
                "operationId": "account_actions_activation_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserActivation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserActivation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/registration/": {
            "post": {
                "operationId": "account_actions_registration_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountRegistration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountRegistration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/resend-activation/": {
            "post": {
                "operationId": "account_actions_resend_activation_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResendActivation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResendActivation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResendActivation"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResendActivation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/reset-password/": {
            "post": {
                "operationId": "account_actions_reset_password_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResetPassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/actions/reset-password-confirm/": {
            "post": {
                "operationId": "account_actions_reset_password_confirm_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPasswordConfirm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPasswordConfirm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserResetPasswordConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResetPasswordConfirm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/device/": {
            "get": {
                "operationId": "account_device_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedDeviceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "account_device_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Device"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/device/{id}/": {
            "get": {
                "operationId": "account_device_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this device.",
                        "required": true
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Device"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "account_device_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this device.",
                        "required": true
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/account/jwt/create/": {
            "post": {
                "operationId": "account_jwt_create_create",
                "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPair"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/refresh/": {
            "post": {
                "operationId": "account_jwt_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/jwt/verify/": {
            "post": {
                "operationId": "account_jwt_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenVerify"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/": {
            "get": {
                "operationId": "account_me_retrieve",
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPersonal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "account_me_partial_update",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPersonal"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPersonal"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserPersonal"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPersonal"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/delete-account/": {
            "post": {
                "operationId": "account_me_delete_account_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDeleteAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/me/delete-account-confirm/": {
            "post": {
                "operationId": "account_me_delete_account_confirm_create",
                "tags": [
                    "account"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDeleteAccountConfirm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/notification/": {
            "get": {
                "operationId": "account_notification_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNotificationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/account/notification/{id}/": {
            "get": {
                "operationId": "account_notification_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notification.",
                        "required": true
                    }
                ],
                "tags": [
                    "account"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/my/": {
            "get": {
                "operationId": "org_my_retrieve",
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyUserAll"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/my-employments/": {
            "get": {
                "operationId": "org_my_employments_retrieve",
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyUserEmployment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/my-invites/": {
            "get": {
                "operationId": "org_my_invites_retrieve",
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyUserInvite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/": {
            "get": {
                "operationId": "org_orgs_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs-invites/": {
            "get": {
                "operationId": "org_orgs_invites_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedOrganizationInviteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_invites_create",
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInviteDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInviteDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInviteDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs-invites/{id}/": {
            "get": {
                "operationId": "org_orgs_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization invite.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization invite.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs-invites/inn/": {
            "post": {
                "operationId": "org_orgs_invites_inn_create",
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInn"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInn"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationInn"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationInn"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/employees/": {
            "get": {
                "operationId": "org_orgs_employees_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_owner",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "profile",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "role",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEmployeeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_employees_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Employee"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Employee"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Employee"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/employees/{id}/": {
            "get": {
                "operationId": "org_orgs_employees_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmployeeDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_employees_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmployee"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmployee"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEmployee"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Employee"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_employees_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this employee.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/my-profile/": {
            "get": {
                "operationId": "org_orgs_my_profile_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_my_profile_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProfile"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Profile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/points/": {
            "get": {
                "operationId": "org_orgs_points_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedControlPointList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_points_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlPoint"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlPoint"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ControlPoint"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlPoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/points/{id}/": {
            "get": {
                "operationId": "org_orgs_points_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this control point.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlPoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "org_orgs_points_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this control point.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedControlPoint"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedControlPoint"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedControlPoint"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ControlPoint"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_points_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this control point.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/user-invites/": {
            "get": {
                "operationId": "org_orgs_user_invites_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "o",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "-created_at",
                                    "-updated_at",
                                    "created_at",
                                    "updated_at"
                                ]
                            }
                        },
                        "description": "Ordering\n\n* `created_at` - Created at\n* `-created_at` - Created at (descending)\n* `updated_at` - Updated at\n* `-updated_at` - Updated at (descending)",
                        "explode": false,
                        "style": "form"
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserInviteList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "org_orgs_user_invites_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteDetailed"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteDetailed"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInviteDetailed"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/user-invites/{id}/": {
            "get": {
                "operationId": "org_orgs_user_invites_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user invite.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInviteDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "org_orgs_user_invites_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user invite.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/v1/org/orgs/{org_id}/user-invites/{id}/accept/": {
            "post": {
                "operationId": "org_orgs_user_invites_accept_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user invite.",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "org_id",
                        "schema": {
                            "type": "string",
                            "pattern": "^\\d+$"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAcceptInvite"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAcceptInvite"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAcceptInvite"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAcceptInvite"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/v1/org/orgs/{id}/": {
            "get": {
                "operationId": "org_orgs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this organization.",
                        "required": true
                    }
                ],
                "tags": [
                    "org"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {
                        "cookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationDetailed"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AccountRegistration": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true,
                        "maxLength": 128
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true,
                        "pattern": "^[\\w.@+-]+$",
                        "minLength": 10,
                        "maxLength": 80
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DefaultProfile"
                            }
                        ],
                        "writeOnly": true,
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "ok",
                    "password",
                    "uid",
                    "username"
                ]
            },
            "ControlPoint": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "is_permanent": {
                        "type": "boolean",
                        "title": "Permanent"
                    },
                    "physical_address": {
                        "type": "integer",
                        "nullable": true
                    },
                    "organization": {
                        "type": "integer"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "updated_at"
                ]
            },
            "DaDataOrganization": {
                "type": "object",
                "properties": {
                    "inn": {
                        "type": "string"
                    },
                    "kpp": {
                        "type": "string"
                    },
                    "ogrn": {
                        "type": "string"
                    },
                    "ogrn_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name_full_with_opf": {
                        "type": "string"
                    },
                    "name_short_with_opf": {
                        "type": "string"
                    },
                    "name_latin": {
                        "type": "string"
                    },
                    "name_full": {
                        "type": "string"
                    },
                    "name_short": {
                        "type": "string"
                    },
                    "owner_name": {
                        "type": "string"
                    },
                    "state_status": {
                        "type": "string"
                    },
                    "address": {
                        "$ref": "#/components/schemas/DaDataSimpleAddress"
                    }
                },
                "required": [
                    "address",
                    "inn",
                    "kpp",
                    "name_full",
                    "name_full_with_opf",
                    "name_latin",
                    "name_short",
                    "name_short_with_opf",
                    "ogrn",
                    "ogrn_date",
                    "owner_name",
                    "state_status",
                    "type"
                ]
            },
            "DaDataSimpleAddress": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "required": [
                    "latitude",
                    "longitude",
                    "value"
                ]
            },
            "DefaultProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "title": "Фото"
                    },
                    "telegram": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "whatsapp": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "viber": {
                        "type": "string",
                        "maxLength": 120
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at"
                ]
            },
            "Device": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_agent": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "device_type": {
                        "$ref": "#/components/schemas/DeviceTypeEnum"
                    },
                    "token": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "token",
                    "updated_at",
                    "user"
                ]
            },
            "DeviceTypeEnum": {
                "enum": [
                    0,
                    1,
                    100,
                    200,
                    210,
                    300
                ],
                "type": "integer",
                "description": "* `0` - Ничего\n* `1` - DB\n* `100` - Email\n* `200` - FCM Mobile\n* `210` - FCM Web\n* `300` - HPK Mobile"
            },
            "Employee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "Owner"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "profile": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "role",
                    "updated_at"
                ]
            },
            "EmployeeDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "Owner"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "profile",
                    "role",
                    "updated_at"
                ]
            },
            "MyEmployment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "Owner"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "organization",
                    "profile",
                    "role",
                    "updated_at"
                ]
            },
            "MyInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Profile"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_username": {
                        "type": "string",
                        "title": "Username",
                        "maxLength": 120
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "maxLength": 254
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "title": "Accepted"
                    },
                    "accept_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creator": {
                        "type": "integer",
                        "nullable": true
                    },
                    "suggest": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "creator",
                    "id",
                    "is_expired",
                    "organization",
                    "profile",
                    "role",
                    "updated_at"
                ]
            },
            "MyOrgInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            }
                        ],
                        "nullable": true
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceCenter"
                            }
                        ],
                        "readOnly": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "identifier": {
                        "type": "string",
                        "maxLength": 125
                    },
                    "identifier_kind": {
                        "type": "string",
                        "maxLength": 28
                    },
                    "as_new": {
                        "type": "boolean",
                        "title": "Created as new"
                    },
                    "is_approved": {
                        "type": "boolean",
                        "title": "Approved"
                    },
                    "verdict_date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reject_message": {
                        "type": "string"
                    },
                    "creator": {
                        "type": "integer",
                        "nullable": true
                    },
                    "organization": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "creator",
                    "id",
                    "identifier",
                    "is_rejected",
                    "name",
                    "organization",
                    "profile",
                    "requisites",
                    "service_center",
                    "updated_at"
                ]
            },
            "MyUserAll": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Admin email",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_activated": {
                        "type": "boolean",
                        "title": "Activated"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "employments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyEmployment"
                        },
                        "readOnly": true
                    },
                    "user_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyInvite"
                        },
                        "readOnly": true
                    },
                    "org_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyOrgInvite"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "employments",
                    "id",
                    "org_invites",
                    "profile",
                    "user_invites",
                    "username"
                ]
            },
            "MyUserEmployment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Admin email",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_activated": {
                        "type": "boolean",
                        "title": "Activated"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "employments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyEmployment"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "employments",
                    "id",
                    "profile",
                    "username"
                ]
            },
            "MyUserInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        "pattern": "^[\\w.@+-]+$",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Admin email",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_activated": {
                        "type": "boolean",
                        "title": "Activated"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "user_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyInvite"
                        },
                        "readOnly": true
                    },
                    "org_invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MyOrgInvite"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "org_invites",
                    "profile",
                    "user_invites",
                    "username"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "text": {
                        "type": "string"
                    },
                    "payload": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "user": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "text",
                    "title",
                    "user"
                ]
            },
            "Organization": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "title": "Фото"
                    },
                    "requisites": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Organization requisites"
                    },
                    "contact": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Organization contact"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "is_service_center",
                    "name",
                    "updated_at"
                ]
            },
            "OrganizationDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/OrganizationSettings"
                    },
                    "service_center": {
                        "$ref": "#/components/schemas/ServiceCenter"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri",
                        "title": "Фото"
                    }
                },
                "required": [
                    "contact",
                    "created_at",
                    "id",
                    "is_service_center",
                    "name",
                    "requisites",
                    "service_center",
                    "settings",
                    "updated_at"
                ]
            },
            "OrganizationInn": {
                "type": "object",
                "properties": {
                    "inn": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DaDataOrganization"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "inn",
                    "results"
                ]
            },
            "OrganizationInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "identifier": {
                        "type": "string",
                        "maxLength": 125
                    },
                    "identifier_kind": {
                        "type": "string",
                        "readOnly": true
                    },
                    "as_new": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Created as new"
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Approved"
                    },
                    "verdict_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "reject_message": {
                        "type": "string"
                    },
                    "creator": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "requisites": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Organization requisites"
                    },
                    "profile": {
                        "type": "integer",
                        "nullable": true
                    },
                    "contact": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Organization contact"
                    },
                    "settings": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Organization settings"
                    },
                    "service_center": {
                        "type": "integer",
                        "nullable": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "as_new",
                    "created_at",
                    "creator",
                    "id",
                    "identifier",
                    "identifier_kind",
                    "is_approved",
                    "is_rejected",
                    "name",
                    "organization",
                    "updated_at",
                    "verdict_date"
                ]
            },
            "OrganizationInviteDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_rejected": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_service_center": {
                        "type": "boolean",
                        "writeOnly": true
                    },
                    "requisites": {
                        "$ref": "#/components/schemas/OrganizationRequisites"
                    },
                    "settings": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrganizationSettings"
                            }
                        ],
                        "nullable": true
                    },
                    "service_center": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceCenter"
                            }
                        ],
                        "readOnly": true
                    },
                    "contact": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "identifier": {
                        "type": "string",
                        "maxLength": 125
                    },
                    "identifier_kind": {
                        "type": "string",
                        "readOnly": true
                    },
                    "as_new": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Created as new"
                    },
                    "is_approved": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Approved"
                    },
                    "verdict_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "reject_message": {
                        "type": "string"
                    },
                    "creator": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "as_new",
                    "contact",
                    "created_at",
                    "creator",
                    "id",
                    "identifier",
                    "identifier_kind",
                    "is_approved",
                    "is_rejected",
                    "name",
                    "organization",
                    "profile",
                    "requisites",
                    "service_center",
                    "updated_at",
                    "verdict_date"
                ]
            },
            "OrganizationRequisites": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_ip": {
                        "type": "boolean",
                        "description": "Индивидуальный Предприниматель",
                        "readOnly": true
                    },
                    "is_ul": {
                        "type": "boolean",
                        "description": "Юридическое Лицо",
                        "readOnly": true
                    },
                    "is_fl": {
                        "type": "boolean",
                        "description": "Физическое Лицо",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "kpp": {
                        "type": "string",
                        "maxLength": 9
                    },
                    "inn": {
                        "type": "string",
                        "maxLength": 12
                    },
                    "ogrn": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "ogrn_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true,
                        "title": "Ogrn issue date"
                    },
                    "physical_address": {
                        "type": "integer",
                        "nullable": true
                    },
                    "legal_address": {
                        "type": "integer",
                        "nullable": true
                    },
                    "postal_address": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "full_name",
                    "id",
                    "is_fl",
                    "is_ip",
                    "is_ul",
                    "updated_at"
                ]
            },
            "OrganizationSettings": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "time_zone": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "time_zone",
                    "updated_at"
                ]
            },
            "PaginatedControlPointList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ControlPoint"
                }
            },
            "PaginatedDeviceList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Device"
                }
            },
            "PaginatedEmployeeList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Employee"
                }
            },
            "PaginatedNotificationList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Notification"
                }
            },
            "PaginatedOrganizationInviteList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/OrganizationInvite"
                }
            },
            "PaginatedOrganizationList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Organization"
                }
            },
            "PaginatedUserInviteList": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/UserInvite"
                }
            },
            "PatchedControlPoint": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 127
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "is_permanent": {
                        "type": "boolean",
                        "title": "Permanent"
                    },
                    "physical_address": {
                        "type": "integer",
                        "nullable": true
                    },
                    "organization": {
                        "type": "integer"
                    }
                }
            },
            "PatchedEmployee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_owner": {
                        "type": "boolean",
                        "title": "Owner"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active"
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "profile": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "telegram": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "whatsapp": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "viber": {
                        "type": "string",
                        "maxLength": 120
                    }
                }
            },
            "PatchedUserPersonal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_activated": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Activated"
                    }
                }
            },
            "Profile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "photo": {
                        "type": "string",
                        "format": "uri"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email address",
                        "maxLength": 254
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "position": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "telegram": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "whatsapp": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "viber": {
                        "type": "string",
                        "maxLength": 120
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "photo",
                    "updated_at"
                ]
            },
            "RoleEnum": {
                "enum": [
                    "client",
                    "engineer",
                    "coordinator"
                ],
                "type": "string",
                "description": "* `client` - client\n* `engineer` - engineer\n* `coordinator` - coordinator"
            },
            "ServiceCenter": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "updated_at"
                ]
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "password",
                    "refresh",
                    "username"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenVerify": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "UserAcceptInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_accepted": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "is_accepted",
                    "is_expired"
                ]
            },
            "UserActivation": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "ok",
                    "token",
                    "uid"
                ]
            },
            "UserDeleteAccount": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "ok",
                    "uid"
                ]
            },
            "UserDeleteAccountConfirm": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "ok",
                    "token"
                ]
            },
            "UserInvite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_username": {
                        "type": "string",
                        "title": "Username",
                        "maxLength": 120
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "maxLength": 254
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Accepted"
                    },
                    "accept_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "creator": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "organization": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "profile": {
                        "type": "integer",
                        "nullable": true
                    },
                    "suggest": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "accept_date",
                    "created_at",
                    "creator",
                    "expiry_date",
                    "id",
                    "is_accepted",
                    "is_expired",
                    "organization",
                    "profile",
                    "role",
                    "suggest",
                    "updated_at"
                ]
            },
            "UserInviteDetailed": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_expired": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/RoleEnum"
                    },
                    "organization": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Organization"
                            }
                        ],
                        "readOnly": true
                    },
                    "profile": {
                        "$ref": "#/components/schemas/Profile"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "user_username": {
                        "type": "string",
                        "title": "Username",
                        "maxLength": 120
                    },
                    "user_email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "maxLength": 254
                    },
                    "is_accepted": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Accepted"
                    },
                    "accept_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "creator": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "suggest": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "accept_date",
                    "created_at",
                    "creator",
                    "expiry_date",
                    "id",
                    "is_accepted",
                    "is_expired",
                    "organization",
                    "profile",
                    "role",
                    "suggest",
                    "updated_at"
                ]
            },
            "UserPersonal": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Required. 120 characters or fewer. Letters, digits and @/./+/-/_ only."
                    },
                    "profile": {
                        "$ref": "#/components/schemas/DefaultProfile"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff status",
                        "description": "Designates whether the user can log into this admin site."
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_activated": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Activated"
                    }
                },
                "required": [
                    "date_joined",
                    "id",
                    "is_activated",
                    "is_staff",
                    "last_login",
                    "profile",
                    "username"
                ]
            },
            "UserResendActivation": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "writeOnly": true
                    }
                },
                "required": [
                    "ok",
                    "uid",
                    "username"
                ]
            },
            "UserResetPassword": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "username": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "ok",
                    "uid",
                    "username"
                ]
            },
            "UserResetPasswordConfirm": {
                "type": "object",
                "properties": {
                    "ok": {
                        "type": "string",
                        "readOnly": true
                    },
                    "uid": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "new_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password",
                    "ok",
                    "token",
                    "uid"
                ]
            }
        },
        "securitySchemes": {
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "sessionid"
            },
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
